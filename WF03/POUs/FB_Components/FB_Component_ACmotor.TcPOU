<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_Component_ACmotor" Id="{4bee0a47-7e8d-4a20-bf36-74643afc4427}" SpecialFunc="None">
    <Declaration><![CDATA[// Function block for AC motors controlled with the LENZE d-31855 frequency inverter
FUNCTION_BLOCK FB_Component_ACmotor IMPLEMENTS I_Component
VAR_INPUT
	sName			: STRING[50];
	tTimeout		: TIME := T#0MS;
END_VAR

VAR_OUTPUT
	eJogFreq		: E_LenzeJogFreq := E_LenzeJogFreq.FOFF;
	
	bEnabled     	: BOOL;
	eState			: E_State := E_State.DISABLED;
	eNextState		: E_State := E_State.DISABLED;
	sStatusText 	: STRING[100];
END_VAR

VAR_IN_OUT
	bDeviceActive	: BOOL;	
	bE1jog1			: BOOL;					// jog func b1
	bE2jog2			: BOOL;					// jog func b2
	bE3DCbrake		: BOOL;					// DC injection brake
	eE4Direction	: BOOL;					// motor direction
END_VAR

VAR
	bLastE1jog1		: BOOL;
	bLastE2jog2		: BOOL;
	eLastState		: E_State;
	tTimeoutTimer	: TON;
END_VAR


VAR CONSTANT
	DISABLED		: E_State := E_State.DISABLED;
	READY			: E_State := E_State.READY;
	BUSY			: E_State := E_State.BUSY;
	HALTED			: E_State := E_State.HALTED;
	TIMEOUT			: E_State := E_State.TIMEOUT;
	
	FOFF	: E_LenzeJogFreq := E_LenzeJogFreq.FOFF;
	F1		: E_LenzeJogFreq := E_LenzeJogFreq.F1;
	F2		: E_LenzeJogFreq := E_LenzeJogFreq.F2;
	F3		: E_LenzeJogFreq := E_LenzeJogFreq.F3;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[tTimeoutTimer(PT := tTimeout);

eState := eNextState;

CASE eState OF
	DISABLED:	sStatusText := 'AC motor disabled';
	
	READY:	 	sStatusText := 'Motor not moving, waiting for instruction';
				IF NOT bDeviceActive THEN
					sStatusText := 'frequency inverter is not activated, please check if control is on and doors are closed';
				ELSIF eJogFreq <> FOFF THEN
					eNextState := BUSY;
				END_IF
				
	BUSY: 		M_ApplyFreq();
				CASE eJogFreq OF
					FOFF: 	eNextState	:= E_State.TIMEOUT;
					F1: 	sStatusText := CONCAT('motor running ', CONCAT(SEL(eE4Direction = TRUE, 'CCW','CW'), ' at freq 1'));		
					F2: 	sStatusText := CONCAT('motor running ', CONCAT(SEL(eE4Direction = TRUE, 'CCW','CW'), ' at freq 2'));				
					F3: 	sStatusText := CONCAT('motor running ', CONCAT(SEL(eE4Direction = TRUE, 'CCW','CW'), ' at freq 3')); 	
				END_CASE
	
	TIMEOUT: 	sStatusText := 'motor in timeout';
				tTimeoutTimer(IN := TRUE);
				
				IF tTimeoutTimer.Q THEN
					tTimeoutTimer(IN := FALSE);
					eNextState := READY;
				END_IF
	
	HALTED: 	sStatusText := 'motor halted';

END_CASE]]></ST>
    </Implementation>
    <Method Name="M_ApplyFreq" Id="{45ef59ca-f483-412d-aa44-48d55fe19516}">
      <Declaration><![CDATA[METHOD M_ApplyFreq : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eState = BUSY AND bDeviceActive THEN
	CASE eJogFreq OF
		FOFF: 	bE1jog1 	:= FALSE;
				bE2jog2 	:= FALSE;
				
		F1: 	bE1jog1 	:= TRUE;
				bE2jog2 	:= FALSE;
				
		F2: 	bE1jog1 	:= TRUE;
				bE2jog2 	:= TRUE;

		F3: 	bE1jog1 	:= FALSE;
				bE2jog2 	:= TRUE;
	END_CASE
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Disable" Id="{71c72c1b-90db-4155-81a4-5bff4fcce209}">
      <Declaration><![CDATA[METHOD M_Disable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eState = READY THEN
	bE1jog1		 	:= FALSE;
	bE2jog2		 	:= FALSE;
	bE3DCbrake 		:= FALSE;
	eE4Direction 	:= FALSE;
	tTimeoutTimer(IN := FALSE);	

	bEnabled	:= FALSE;
	eNextState	:= DISABLED;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Enable" Id="{c92aa9f1-9d9c-44c7-a5b6-0e765f9c3f9f}">
      <Declaration><![CDATA[METHOD M_Enable : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eState = DISABLED THEN
	bEnabled	:= TRUE;
	eNextState 	:= READY;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Halt" Id="{53708385-0949-4c5c-b3ef-98a2fb526cc6}">
      <Declaration><![CDATA[METHOD M_Halt : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eState <> HALTED AND eState <> DISABLED THEN
	bLastE1jog1 := bE1jog1;
	bLastE2jog2 := bE2jog2;
	
	bE1jog1		:= FALSE;
	bE2jog2		:= FALSE;
	bE3DCbrake	:= TRUE;
	
	eLastState 	:= eState;
	eNextState 	:= HALTED;	
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Resume" Id="{66616ade-f252-442d-bf57-ed976b2ae351}">
      <Declaration><![CDATA[METHOD M_Resume : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eState = HALTED THEN
	bE1jog1 	:= bLastE1jog1;
	bE2jog2 	:= bLastE2jog2;
	bE3DCbrake 	:= FALSE;
	
	eNextState 	:= eLastState;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_SetDir" Id="{d6a197ac-aaf3-4f2e-919c-b2334f169d78}">
      <Declaration><![CDATA[METHOD M_SetDir : BOOL
VAR_INPUT
	Direction: E_RotationDirection;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eState = READY THEN
	eE4Direction := TO_BOOL(Direction);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_SetFreq" Id="{387ee47f-c4da-4cf1-a6b6-e28ea3f37257}">
      <Declaration><![CDATA[METHOD M_SetFreq : BOOL
VAR_INPUT
	Frequency: E_LenzeJogFreq;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF eState = READY OR eState = BUSY THEN
	eJogFreq := Frequency;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Component_ACmotor">
      <LineId Id="211" Count="0" />
      <LineId Id="363" Count="0" />
      <LineId Id="362" Count="0" />
      <LineId Id="212" Count="0" />
      <LineId Id="200" Count="1" />
      <LineId Id="227" Count="0" />
      <LineId Id="202" Count="0" />
      <LineId Id="226" Count="0" />
      <LineId Id="356" Count="0" />
      <LineId Id="355" Count="0" />
      <LineId Id="259" Count="2" />
      <LineId Id="271" Count="0" />
      <LineId Id="364" Count="0" />
      <LineId Id="249" Count="1" />
      <LineId Id="253" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="245" Count="0" />
      <LineId Id="278" Count="0" />
      <LineId Id="206" Count="0" />
      <LineId Id="280" Count="0" />
      <LineId Id="287" Count="2" />
      <LineId Id="358" Count="0" />
      <LineId Id="279" Count="0" />
      <LineId Id="297" Count="2" />
      <LineId Id="51" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component_ACmotor.M_ApplyFreq">
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="12" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component_ACmotor.M_Disable">
      <LineId Id="5" Count="0" />
      <LineId Id="14" Count="3" />
      <LineId Id="12" Count="1" />
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component_ACmotor.M_Enable">
      <LineId Id="5" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="6" Count="1" />
    </LineIds>
    <LineIds Name="FB_Component_ACmotor.M_Halt">
      <LineId Id="19" Count="0" />
      <LineId Id="22" Count="4" />
      <LineId Id="29" Count="0" />
      <LineId Id="27" Count="1" />
      <LineId Id="20" Count="1" />
      <LineId Id="8" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component_ACmotor.M_Resume">
      <LineId Id="15" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="16" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component_ACmotor.M_SetDir">
      <LineId Id="16" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="17" Count="0" />
    </LineIds>
    <LineIds Name="FB_Component_ACmotor.M_SetFreq">
      <LineId Id="40" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="36" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>