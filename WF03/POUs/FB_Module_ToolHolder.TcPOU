<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.15">
  <POU Name="FB_Module_ToolHolder" Id="{b8caeb05-c46f-4fb5-a22c-c7afa5dce2ec}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Module_ToolHolder IMPLEMENTS I_Module
VAR_INPUT
	bEnable					: BOOL;
	bToolRotationBtn		: BOOL;
END_VAR
VAR_IN_OUT
	bToolRotationBtnLight	: BOOL;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	Components			: ARRAY [0..5] OF I_Component;
	
	fbACmotor			: FB_Component_ACmotor;
	
	fbToolHolderLock	: FB_Component_SingleValve;
	fbReedLock			: FB_Component_ReedSwitch;
	fbReedUnlock		: FB_Component_ReedSwitch;
	
	fbIndexBit1			: FB_Component_InductiveSensor;
	fbIndexBit2			: FB_Component_InductiveSensor;
	idx					: INT;
	bDir				: BOOL; // placeholder because this motor is single direction
	bToolRotating		: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bEnable THEN
	fbACmotor(
		bDeviceActive 	:= GVL.bLenze1Relay,
		sName			:= 'AC motor holder',
		bEnable			:= TRUE,
		bE1jog1			:= GVL.bLenze2JogBit1,
		bE2jog2			:= GVL.bLenze2JogBit2,
		bE3DCbrake		:= GVL.bLenze2njectionBrake,
		eE4Direction	:= bDir);
		
	fbToolHolderLock(
		sName 	:= 'Holder Lock',
		bEnable := TRUE,
		bOutput := GVL.bUnlockToolHolder);
		
	fbReedLock(
		bRawSignal	:= GVL.bToolHolderUnlocked,
		tDebounce	:= T#5MS,
		tTimeout	:= T#0S,
		sName		:= 'holder locked reed',
		bEnable		:= TRUE);
		
	fbReedUnlock(
		bRawSignal	:= GVL.bToolHolderLocked,
		tDebounce	:= T#5MS,
		tTimeout	:= T#0S,
		sName		:= 'holder unlocked reed',
		bEnable		:= TRUE);
		
	fbIndexBit1(bRawSignal := GVL.bToolHolderIndexBit1,
		tDebounce 	:= T#5MS,
		tTimeout	:= T#0S,
		sName		:= 'holder index 1',
		bEnable		:= TRUE);
		
	fbIndexBit2(bRawSignal := GVL.bToolHolderIndexBit2,
		tDebounce 	:= T#5MS,
		tTimeout	:= T#0S,
		sName		:= 'holder index 2',
		bEnable		:= TRUE);
		
	Components[0] 	:= fbACmotor;
	Components[1] 	:= fbToolHolderLock;
	Components[2] 	:= fbReedLock;
	Components[3] 	:= fbReedUnlock;
	Components[4] 	:= fbIndexBit1;
	Components[5] 	:= fbIndexBit2;
	
	FOR idx := 0 TO 5 DO
    	Components[idx].M_Start();
	END_FOR;
	
	IF bToolRotationBtn THEN
		bToolRotating := TRUE;
	END_IF
	
	IF bToolRotating THEN
		bToolRotationBtnLight := TRUE;
		bToolRotating := NOT M_Switch();
	ELSE
		bToolRotationBtnLight := FALSE;
	END_IF
END_IF]]></ST>
    </Implementation>
    <Method Name="M_Halt" Id="{f4fd5710-ad40-4a73-9d1f-e22168ac17cc}">
      <Declaration><![CDATA[METHOD M_Halt : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Lock" Id="{be180632-11d0-40d6-9843-f03e84e63f14}">
      <Declaration><![CDATA[METHOD M_Lock : BOOL
VAR_INPUT
END_VAR

VAR
	eState: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bEnable AND fbACmotor.eState <> E_ComponentState.BUSY THEN 
		fbToolHolderLock.M_Retract();
END_IF;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Start" Id="{d25814ce-c93f-4e9d-95a8-b52a3b6266b0}">
      <Declaration><![CDATA[METHOD M_Start : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Stop" Id="{7b921080-9dcf-40c5-a818-6ca94e76f031}">
      <Declaration><![CDATA[METHOD M_Stop : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Switch" Id="{d42bd0d4-106d-41e3-8483-38e40bc74aa0}">
      <Declaration><![CDATA[METHOD M_Switch : BOOL
VAR_INPUT
END_VAR

VAR
	tTrigger1 	: R_TRIG;
	tTrigger2 	: R_TRIG;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bEnable AND fbReedUnlock.bSensorActive THEN	
	tTrigger1(CLK := fbIndexBit1.bRisingEdge);					// triggers to detect rising edge of index bits
	tTrigger2(CLK := fbIndexBit2.bRisingEdge);
	
	fbACmotor.M_SetFreq(Frequency := E_LenzeJogFreq.F3);		// when no index bit has triggered, high speed
	
	IF tTrigger1.Q THEN											// when first index is triggered, switch to lowest speed
		fbACmotor.M_SetFreq(Frequency := E_LenzeJogFreq.F1);
	END_IF
	
	IF tTrigger2.Q THEN											// when last index bit has triggered, turn of motor
		fbACmotor.M_SetFreq(Frequency := E_LenzeJogFreq.F0FF);
		IF fbACmotor.eState <> E_ComponentState.BUSY THEN		// if motor is off, lock plate and signal operation done
			M_lock();
			M_Switch := TRUE;
		END_IF;
	END_IF
ELSE
	M_Unlock();													// unlock plate of locked and reset edges for detecting indexes
	fbIndexBit1.M_ResetEdge();
	fbIndexBit2.M_ResetEdge();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_Unlock" Id="{d0392bfa-8354-4867-a771-cbf55ec92350}">
      <Declaration><![CDATA[METHOD M_Unlock : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF bEnable AND fbACmotor.eState <> E_ComponentState.BUSY THEN 
		fbToolHolderLock.M_Extend();
END_IF;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Module_ToolHolder">
      <LineId Id="9" Count="0" />
      <LineId Id="26" Count="6" />
      <LineId Id="22" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="35" Count="2" />
      <LineId Id="34" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="51" Count="23" />
      <LineId Id="39" Count="0" />
      <LineId Id="75" Count="6" />
      <LineId Id="83" Count="0" />
      <LineId Id="85" Count="1" />
      <LineId Id="84" Count="0" />
      <LineId Id="108" Count="3" />
      <LineId Id="113" Count="0" />
      <LineId Id="115" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="116" Count="0" />
      <LineId Id="124" Count="1" />
      <LineId Id="117" Count="0" />
      <LineId Id="23" Count="0" />
    </LineIds>
    <LineIds Name="FB_Module_ToolHolder.M_Halt">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Module_ToolHolder.M_Lock">
      <LineId Id="9" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
    <LineIds Name="FB_Module_ToolHolder.M_Start">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Module_ToolHolder.M_Stop">
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_Module_ToolHolder.M_Switch">
      <LineId Id="5" Count="0" />
      <LineId Id="52" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="53" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="22" Count="0" />
      <LineId Id="55" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="44" Count="1" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_Module_ToolHolder.M_Unlock">
      <LineId Id="11" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>